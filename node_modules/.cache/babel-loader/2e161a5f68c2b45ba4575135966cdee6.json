{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prakhar\\\\Desktop\\\\books\\\\my_app2\\\\src\\\\CoinInfo.jsx\",\n    _s = $RefreshSig$();\n\n// import axios from 'axios';\n// import React, { useEffect, useState } from 'react'\n// import { HistoricalChart } from './config/Api';\n// import \"./CoinInfo.css\"\n// import { CircularProgress } from '@mui/material';\n// import { Line } from 'react-chartjs-2';\n// const CoinInfo = (props) => {\n//  const[historicalData , sethistoricalData] = useState([]);\n//  const[days , setdays] = useState(1);\n//  const fetchData = async () =>{\n//    const res = await axios.get(HistoricalChart(props.coin.id,\"365\",\"USD\"))\n//    sethistoricalData(res.data);\n//  }\n//  useEffect(()=>{\n//   fetchData();\n//  },[])\n//   return (\n//     <div className='container'>\n//       {\n//         !historicalData ? (\n//           <CircularProgress\n//           style={{color: \"gold\"}}\n//           size = {250}\n//           thickness = {1}\n//           />\n//         ) : (\n//           <>\n//           <Line\n//           data = {{\n//             labels: historicalData.map(coin => {\n//               let date = new Date(coin[0]);\n//               let time = date.getHours() > 12 ? `${date.getHours()-12}: ${date.getMinutes()} PM ` : `${date.getHours()}:${date.getMinutes()} AM `\n//               return days===1?time:date.toLocaleDateString()\n//             }),\n//             datasets: {\n//                   data: historicalData.map((coin)=>coin[1])\n//           }\n//           }}\n//           />\n//           </>\n//         )\n//       }\n//     </div>\n//   )\n// }\n// export default CoinInfo\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart } from \"./config/api\";\nimport { Line } from \"react-chartjs-2\";\nimport { CircularProgress, createTheme, makeStyles, ThemeProvider } from \"@material-ui/core\"; //  import SelectButton from \"./SelectButton\";\n\nimport { chartDays } from \"./config/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CoinInfo = _ref => {\n  _s();\n\n  let {\n    coin\n  } = _ref;\n  const [historicData, setHistoricData] = useState();\n  const [days, setDays] = useState(1);\n  const [flag, setflag] = useState(false);\n  const useStyles = makeStyles(theme => ({\n    container: {\n      width: \"75%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: 25,\n      padding: 40,\n      [theme.breakpoints.down(\"md\")]: {\n        width: \"100%\",\n        marginTop: 0,\n        padding: 20,\n        paddingTop: 0\n      }\n    }\n  }));\n  const classes = useStyles();\n\n  const fetchHistoricData = async () => {\n    const {\n      data\n    } = await axios.get(HistoricalChart(coin.id, days, \"$\"));\n    setflag(true);\n    setHistoricData(data.prices);\n  };\n\n  console.log(coin);\n  useEffect(() => {\n    fetchHistoricData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [days]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: !historicData | flag === false ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: \"gold\"\n        },\n        size: 250,\n        thickness: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: historicData.map(coin => {\n              let date = new Date(coin[0]);\n              let time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes()} AM`;\n              return days === 1 ? time : date.toLocaleDateString();\n            }),\n            datasets: [{\n              data: historicData.map(coin => coin[1]),\n              label: `Price ( Past ${days} Days ) in $`,\n              borderColor: \"#EEBC1D\"\n            }]\n          },\n          options: {\n            elements: {\n              point: {\n                radius: 1\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: 20,\n            justifyContent: \"space-around\",\n            width: \"100%\"\n          },\n          children: chartDays.map(day => {// <SelectButton\n            //   key={day.value}\n            //   onClick={() => {setDays(day.value);\n            //     setflag(false);\n            //   }}\n            //   selected={day.value === days}\n            // >\n            //   {day.label}\n            // </SelectButton>\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinInfo, \"wB+TPO1KCe3UpotnwV/QIayC2G0=\", true);\n\n_c = CoinInfo;\nexport default CoinInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"sources":["C:/Users/prakhar/Desktop/books/my_app2/src/CoinInfo.jsx"],"names":["axios","useEffect","useState","HistoricalChart","Line","CircularProgress","createTheme","makeStyles","ThemeProvider","chartDays","CoinInfo","coin","historicData","setHistoricData","days","setDays","flag","setflag","useStyles","theme","container","width","display","flexDirection","alignItems","justifyContent","marginTop","padding","breakpoints","down","paddingTop","classes","fetchHistoricData","data","get","id","prices","console","log","darkTheme","palette","primary","main","type","color","labels","map","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","label","borderColor","elements","point","radius","day"],"mappings":"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","sourcesContent":["// import axios from 'axios';\r\n// import React, { useEffect, useState } from 'react'\r\n// import { HistoricalChart } from './config/Api';\r\n// import \"./CoinInfo.css\"\r\n// import { CircularProgress } from '@mui/material';\r\n// import { Line } from 'react-chartjs-2';\r\n\r\n// const CoinInfo = (props) => {\r\n//  const[historicalData , sethistoricalData] = useState([]);\r\n//  const[days , setdays] = useState(1);\r\n\r\n//  const fetchData = async () =>{\r\n//    const res = await axios.get(HistoricalChart(props.coin.id,\"365\",\"USD\"))\r\n//    sethistoricalData(res.data);\r\n\r\n//  }\r\n\r\n\r\n\r\n\r\n\r\n//  useEffect(()=>{\r\n//   fetchData();\r\n//  },[])\r\n\r\n\r\n//   return (\r\n//     <div className='container'>\r\n\r\n//       {\r\n//         !historicalData ? (\r\n//           <CircularProgress\r\n//           style={{color: \"gold\"}}\r\n//           size = {250}\r\n//           thickness = {1}\r\n//           />\r\n//         ) : (\r\n//           <>\r\n//           <Line\r\n//           data = {{\r\n//             labels: historicalData.map(coin => {\r\n//               let date = new Date(coin[0]);\r\n//               let time = date.getHours() > 12 ? `${date.getHours()-12}: ${date.getMinutes()} PM ` : `${date.getHours()}:${date.getMinutes()} AM `\r\n\r\n//               return days===1?time:date.toLocaleDateString()\r\n//             }),\r\n//             datasets: {\r\n//                   data: historicalData.map((coin)=>coin[1])\r\n//           }\r\n//           }}\r\n//           />\r\n//           </>\r\n//         )\r\n//       }\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default CoinInfo\r\n\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { HistoricalChart } from \"./config/api\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  CircularProgress,\r\n  createTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\n//  import SelectButton from \"./SelectButton\";\r\nimport { chartDays } from \"./config/data\";\r\n\r\n\r\nconst CoinInfo = ({ coin }) => {\r\n  const [historicData, setHistoricData] = useState();\r\n  const [days, setDays] = useState(1);\r\n\r\n  const [flag, setflag] = useState(false);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    container: {\r\n      width: \"75%\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      marginTop: 25,\r\n      padding: 40,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        width: \"100%\",\r\n        marginTop: 0,\r\n        padding: 20,\r\n        paddingTop: 0,\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const fetchHistoricData = async () => {\r\n    const { data } = await axios.get(HistoricalChart(coin.id, days, \"$\"));\r\n    setflag(true);\r\n    setHistoricData(data.prices);\r\n  };\r\n\r\n  console.log(coin);\r\n\r\n  useEffect(() => {\r\n    fetchHistoricData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [days]);\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#fff\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className={classes.container}>\r\n        {!historicData | flag === false ? (\r\n          <CircularProgress\r\n            style={{ color: \"gold\" }}\r\n            size={250}\r\n            thickness={1}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Line\r\n              data={{\r\n                labels: historicData.map((coin) => {\r\n                  let date = new Date(coin[0]);\r\n                  let time =\r\n                    date.getHours() > 12\r\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\r\n                  return days === 1 ? time : date.toLocaleDateString();\r\n                }),\r\n\r\n                datasets: [\r\n                  {\r\n                    data: historicData.map((coin) => coin[1]),\r\n                    label: `Price ( Past ${days} Days ) in $`,\r\n                    borderColor: \"#EEBC1D\",\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                elements: {\r\n                  point: {\r\n                    radius: 1,\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                marginTop: 20,\r\n                justifyContent: \"space-around\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              {chartDays.map((day) => {\r\n                // <SelectButton\r\n                //   key={day.value}\r\n                //   onClick={() => {setDays(day.value);\r\n                //     setflag(false);\r\n                //   }}\r\n                //   selected={day.value === days}\r\n                // >\r\n                //   {day.label}\r\n                // </SelectButton>\r\n              })}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default CoinInfo;"]},"metadata":{},"sourceType":"module"}