{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prakhar\\\\Desktop\\\\books\\\\my_app2\\\\src\\\\CoinInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { HistoricalChart } from './config/Api';\nimport \"./CoinInfo.css\";\nimport { CircularProgress } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CoinInfo = _ref => {\n  _s();\n\n  let {\n    coin\n  } = _ref;\n  const [historicalData, sethistoricalData] = useState([]);\n  const [days, setdays] = useState(1);\n\n  const fetchData = async () => {\n    const res = await axios.get(HistoricalChart(\"ripple\", days, \"USD\"));\n    sethistoricalData(res.data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: !historicalData ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        color: \"gold\"\n      },\n      size: 250,\n      thickness: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: historicalData.map(coin => {\n            let date = new Date(coin[0]);\n            let time = date.getHours() > 12 ? `${date.getHours() - 12}: ${date.getMinutes()} PM ` : `${date.getHours()}:${date.getMinutes()} AM `;\n            return days === 1 ? time : date.toLocaleDateString();\n          }),\n          datasets: {\n            data: historicalData.map(coin => coin[1])\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinInfo, \"7NiC1sFtxBTcf+oMqb36KcYqTU0=\");\n\n_c = CoinInfo;\nexport default CoinInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"sources":["C:/Users/prakhar/Desktop/books/my_app2/src/CoinInfo.jsx"],"names":["axios","React","useEffect","useState","HistoricalChart","CircularProgress","Line","CoinInfo","coin","historicalData","sethistoricalData","days","setdays","fetchData","res","get","data","color","labels","map","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAO,gBAAP;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;;;;AAEA,MAAMC,QAAQ,GAAG,QAAY;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAC5B,QAAK,CAACC,cAAD,EAAkBC,iBAAlB,IAAuCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAK,CAACQ,IAAD,EAAQC,OAAR,IAAmBT,QAAQ,CAAC,CAAD,CAAhC;;AAEA,QAAMU,SAAS,GAAG,YAAW;AAC3B,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUX,eAAe,CAAC,QAAD,EAAUO,IAAV,EAAe,KAAf,CAAzB,CAAlB;AACAD,IAAAA,iBAAiB,CAACI,GAAG,CAACE,IAAL,CAAjB;AAED,GAJD;;AAUAd,EAAAA,SAAS,CAAC,MAAI;AACbW,IAAAA,SAAS;AACT,GAFQ,EAEP,EAFO,CAAT;AAKC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAGI,CAACJ,cAAD,gBACE,QAAC,gBAAD;AACA,MAAA,KAAK,EAAE;AAACQ,QAAAA,KAAK,EAAE;AAAR,OADP;AAEA,MAAA,IAAI,EAAI,GAFR;AAGA,MAAA,SAAS,EAAI;AAHb;AAAA;AAAA;AAAA;AAAA,YADF,gBAOE;AAAA,6BACA,QAAC,IAAD;AACA,QAAA,IAAI,EAAI;AACNC,UAAAA,MAAM,EAAET,cAAc,CAACU,GAAf,CAAmBX,IAAI,IAAI;AACjC,gBAAIY,IAAI,GAAG,IAAIC,IAAJ,CAASb,IAAI,CAAC,CAAD,CAAb,CAAX;AACA,gBAAIc,IAAI,GAAGF,IAAI,CAACG,QAAL,KAAkB,EAAlB,GAAwB,GAAEH,IAAI,CAACG,QAAL,KAAgB,EAAG,KAAIH,IAAI,CAACI,UAAL,EAAkB,MAAnE,GAA4E,GAAEJ,IAAI,CAACG,QAAL,EAAgB,IAAGH,IAAI,CAACI,UAAL,EAAkB,MAA9H;AAEA,mBAAOb,IAAI,KAAG,CAAP,GAASW,IAAT,GAAcF,IAAI,CAACK,kBAAL,EAArB;AACD,WALO,CADF;AAONC,UAAAA,QAAQ,EAAE;AACJV,YAAAA,IAAI,EAAEP,cAAc,CAACU,GAAf,CAAoBX,IAAD,IAAQA,IAAI,CAAC,CAAD,CAA/B;AADF;AAPJ;AADR;AAAA;AAAA;AAAA;AAAA;AADA;AAVN;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAlDD;;GAAMD,Q;;KAAAA,Q;AAoDN,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { HistoricalChart } from './config/Api';\r\nimport \"./CoinInfo.css\"\r\nimport { CircularProgress } from '@mui/material';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst CoinInfo = ({coin}) => {\r\n const[historicalData , sethistoricalData] = useState([]);\r\n const[days , setdays] = useState(1);\r\n\r\n const fetchData = async () =>{\r\n   const res = await axios.get(HistoricalChart(\"ripple\",days,\"USD\"))\r\n   sethistoricalData(res.data);\r\n   \r\n }\r\n\r\n\r\n\r\n \r\n\r\n useEffect(()=>{\r\n  fetchData();\r\n },[])\r\n\r\n\r\n  return (\r\n    <div className='container'>\r\n\r\n      {\r\n        !historicalData ? (\r\n          <CircularProgress\r\n          style={{color: \"gold\"}}\r\n          size = {250}\r\n          thickness = {1}\r\n          />\r\n        ) : (\r\n          <>\r\n          <Line\r\n          data = {{\r\n            labels: historicalData.map(coin => {\r\n              let date = new Date(coin[0]);\r\n              let time = date.getHours() > 12 ? `${date.getHours()-12}: ${date.getMinutes()} PM ` : `${date.getHours()}:${date.getMinutes()} AM `\r\n\r\n              return days===1?time:date.toLocaleDateString()\r\n            }),\r\n            datasets: {\r\n                  data: historicalData.map((coin)=>coin[1])\r\n          }\r\n          }}\r\n          />\r\n          </>\r\n        )\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CoinInfo"]},"metadata":{},"sourceType":"module"}