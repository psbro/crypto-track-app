{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prakhar\\\\Desktop\\\\books\\\\my_app2\\\\src\\\\CoinTable.jsx\",\n    _s = $RefreshSig$();\n\nimport { Input, LinearProgress, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { createTheme } from '@mui/system';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport \"./CoinTable.css\";\nimport { CoinList } from './config/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CoinTable = () => {\n  _s();\n\n  const [coins, Setcoins] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [search, Setsearch] = useState();\n  const [text, Settext] = useState();\n\n  const InputE = e => {\n    Settext(e.target.value);\n  };\n\n  const fetchCoins = async () => {\n    setloading(true);\n    const res = await axios.get(CoinList(\"USD\"));\n    setloading(false);\n    Setcoins(res.data);\n  };\n\n  useEffect(() => {\n    fetchCoins();\n  }, []);\n  const darkTheme = createTheme({\n    palette: {\n      main: \"#fff\"\n    },\n    type: \"dark\"\n  });\n\n  const handleSearch = () => {\n    return coins.filter(coin => coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase().includes(search));\n  };\n\n  const useStyles = makeStyles(() => {});\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Cryotocurrency prices by market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"input\",\n        placeholder: \"search crypto currency here...\",\n        value: text,\n        onChange: InputE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        height: \"200\",\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          style: {\n            backgroundColor: \"gold\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              style: {\n                backgroundColor: \"gold\"\n              },\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [\"Coin\", \"Price\", \"24h change\", \"Market cap\"].map(head => /*#__PURE__*/_jsxDEV(TableCell, {\n                  style: {\n                    color: \"black\",\n                    fontWeight: \"700\",\n                    fontFamily: \"Montserrat\"\n                  },\n                  align: head === \"Coin\" ? \"\" : \"right\",\n                  children: head\n                }, head, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: handleSearch().map(row => {\n                const profit = row.price_change_percentage_24h > 0;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  className: classes.row,\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    styles: {\n                      display: \"flex\",\n                      gap: 15\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: row.image,\n                      alt: row.name,\n                      height: \"50\",\n                      style: {\n                        marginBottom: 10\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 25\n                  }, this)\n                }, row.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoinTable, \"d4qqi8VsjZ3KbBMsEoLlTOr57dk=\", true);\n\n_c = CoinTable;\nexport default CoinTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinTable\");","map":{"version":3,"sources":["C:/Users/prakhar/Desktop/books/my_app2/src/CoinTable.jsx"],"names":["Input","LinearProgress","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","makeStyles","createTheme","axios","React","useEffect","useState","ThemeProvider","CoinList","CoinTable","coins","Setcoins","loading","setloading","search","Setsearch","text","Settext","InputE","e","target","value","fetchCoins","res","get","data","darkTheme","palette","main","type","handleSearch","filter","coin","name","toLowerCase","includes","symbol","useStyles","classes","textAlign","backgroundColor","map","head","color","fontWeight","fontFamily","row","profit","price_change_percentage_24h","display","gap","image","marginBottom"],"mappings":"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","sourcesContent":["import { Input, LinearProgress, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { createTheme } from '@mui/system';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ThemeProvider } from 'styled-components';\r\nimport \"./CoinTable.css\"\r\nimport { CoinList } from './config/Api';\r\n\r\nconst CoinTable = () => {\r\n\r\n  const [coins, Setcoins] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [search, Setsearch] = useState();\r\n  const [text, Settext] = useState();\r\n\r\n  const InputE = (e) => {\r\n    Settext(e.target.value)\r\n  }\r\n\r\n\r\n\r\n  const fetchCoins = async () => {\r\n    setloading(true);\r\n    const res = await axios.get(CoinList(\"USD\"));\r\n    setloading(false);\r\n    Setcoins(res.data);\r\n\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCoins();\r\n  }, [])\r\n\r\n\r\n\r\n  const darkTheme = createTheme(({\r\n    palette: {\r\n      main: \"#fff\"\r\n    },\r\n    type: \"dark\",\r\n  }));\r\n\r\n  const handleSearch = () => {\r\n    return coins.filter((coin) => (\r\n      coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase().includes(search)\r\n    ))\r\n  }\r\n\r\n  const useStyles = makeStyles(() => {\r\n\r\n  })\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div className='table' style={{ textAlign: \"center\" }}>\r\n        <h4>\r\n          Cryotocurrency prices by market Cap\r\n        </h4>\r\n        <input type=\"text\" id=\"input\" placeholder='search crypto currency here...' value={text} onChange={InputE} />\r\n        <TableContainer height=\"200\">\r\n          {loading ? (\r\n            <LinearProgress style={{ backgroundColor: \"gold\" }} />\r\n          ) : (\r\n            <>\r\n              <Table>\r\n                <TableHead style={{ backgroundColor: \"gold\" }}>\r\n                  <TableRow>\r\n                    {[\"Coin\", \"Price\", \"24h change\", \"Market cap\"].map((head) => (\r\n                      <TableCell\r\n                        style={{\r\n                          color: \"black\",\r\n                          fontWeight: \"700\",\r\n                          fontFamily: \"Montserrat\",\r\n                        }}\r\n                        key={head}\r\n                        align={head === \"Coin\" ? \"\" : \"right\"}\r\n                      >\r\n                        {head}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {handleSearch().map(row => {\r\n                    const profit = row.price_change_percentage_24h > 0;\r\n                    return (\r\n                      <TableRow\r\n\r\n                        className={classes.row}\r\n                        key={row.name}\r\n                      >\r\n\r\n                        <TableCell component=\"th\" scope=\"row\"\r\n                          styles={{\r\n                            display: \"flex\",\r\n                            gap: 15,\r\n                          }}\r\n                        >\r\n                          <img src={row.image} alt={row.name} height=\"50\" style = {{marginBottom: 10}} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </>\r\n          )}\r\n\r\n\r\n        </TableContainer>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default CoinTable;"]},"metadata":{},"sourceType":"module"}