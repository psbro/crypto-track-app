{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prakhar\\\\Desktop\\\\books\\\\my_app2\\\\src\\\\CryotoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crypto = /*#__PURE__*/createContext();\n\nconst CryotoContext = _ref => {\n  _s();\n\n  let {\n    child\n  } = _ref;\n  const [curr, setCurr] = useState(\"INR\");\n  const [symbol, setsymbol] = useState(\"#\");\n  useEffect(() => {\n    if (curr === \"INR\") {\n      setsymbol(\"#\");\n    } else if (curr === \"USD\") {\n      setsymbol(\"$\");\n    }\n  }, [curr]);\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    value: (curr, symbol, setCurr),\n    children: Child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CryotoContext, \"3kK+faghvyjqimPH8AbfiTP8CoM=\");\n\n_c = CryotoContext;\nexport default CryotoContext;\nexport const CryptoState = () => {\n  _s2();\n\n  return useContext(Crypto);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryotoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"sources":["C:/Users/prakhar/Desktop/books/my_app2/src/CryotoContext.js"],"names":["React","createContext","useContext","useEffect","useState","Crypto","CryotoContext","child","curr","setCurr","symbol","setsymbol","Child","CryptoState"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;;AAGA,MAAMC,MAAM,gBAAGJ,aAAa,EAA5B;;AACA,MAAMK,aAAa,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,GAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,IAAI,KAAK,KAAb,EAAoB;AAChBG,MAAAA,SAAS,CAAC,GAAD,CAAT;AACH,KAFD,MAIK,IAAIH,IAAI,KAAK,KAAb,EAAoB;AACrBG,MAAAA,SAAS,CAAC,GAAD,CAAT;AACH;AAGJ,GAVQ,EAUN,CAACH,IAAD,CAVM,CAAT;AAWA,sBACI,QAAC,MAAD,CAAQ,QAAR;AAAiB,IAAA,KAAK,GAAEA,IAAI,EAACE,MAAD,EAAQD,OAAd,CAAtB;AAAA,cACKG;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApBD;;GAAMN,a;;KAAAA,a;AAsBN,eAAeA,aAAf;AAEA,OAAO,MAAMO,WAAW,GAAG,MAAM;AAAA;;AAC7B,SAAOX,UAAU,CAACG,MAAD,CAAjB;AACH,CAFM;;IAAMQ,W;;MAAAA,W","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react'\r\n\r\n\r\nconst Crypto = createContext()\r\nconst CryotoContext = ({ child }) => {\r\n    const [curr, setCurr] = useState(\"INR\");\r\n    const [symbol, setsymbol] = useState(\"#\");\r\n\r\n    useEffect(() => {\r\n        if (curr === \"INR\") {\r\n            setsymbol(\"#\")\r\n        }\r\n\r\n        else if (curr === \"USD\") {\r\n            setsymbol(\"$\")\r\n        }\r\n\r\n\r\n    }, [curr])\r\n    return (\r\n        <Crypto.Provider value={curr,symbol,setCurr}>\r\n            {Child}\r\n        </Crypto.Provider>\r\n    )\r\n}\r\n\r\nexport default CryotoContext;\r\n\r\nexport const CryptoState = () => {\r\n    return useContext(Crypto)\r\n}"]},"metadata":{},"sourceType":"module"}